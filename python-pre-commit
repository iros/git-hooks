#!/bin/bash

# This code is intended to be used as part of a submodule called git-hooks.

# To make git run unit tests and lint tests, softlink this file into the
# .git/hooks directory of the repo you want to test.  The following command will
# get that done:
#   ln -s ../../git-hooks/python-pre-commit .git/hooks/pre-commit

# Run unit tests
COVERAGE=coverage
if [[ -z $(which $COVERAGE) ]]; then
  COVERAGE=python-coverage
fi
if ! $COVERAGE run --source='.' -m unittest discover --pattern='*_test.py'; then
  echo "TESTS FAILED" 1>&2
  exit 1
fi

# Run everything through the linter
pylint --rcfile=git-hooks/pylintrc \
       --output-format=colorized \
       --reports=n \
       $(find . -name \*.py)
# pylint return codes described here:
#   https://lists.logilab.org/pipermail/python-projects/2009-November/002068.html
# We only care about fatal messages and errors, the existence of which are
# assigned to bits 0 and 1 of the return code, respectively.
if [[ $(( $? & 3 )) -ne 0 ]]; then
  echo "LINTER FAILED" 1>&2
  echo "Fix all errors and fatal messages" 1>&2
  exit 1
fi
